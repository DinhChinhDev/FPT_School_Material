// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Confections"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Confections"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Confections"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryId = 11,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryId = 12,
                            CategoryName = "Confections"
                        });
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MemberId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            City = "Da Nang",
                            CompanyName = "FPT Software",
                            Country = "Viet Nam",
                            Email = "admin@gmail.com",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("MemberId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ProductName = "Chocopie",
                            UnitPrice = 10m,
                            UnitsInStock = 103,
                            Weight = "1.5 kg"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            ProductName = "Vanilla Dream Cake",
                            UnitPrice = 25m,
                            UnitsInStock = 50,
                            Weight = "2 kg"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            ProductName = "Green Tea",
                            UnitPrice = 8m,
                            UnitsInStock = 75,
                            Weight = "250 g"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            ProductName = "Espresso Beans",
                            UnitPrice = 15m,
                            UnitsInStock = 40,
                            Weight = "500 g"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            ProductName = "Organic Avocado",
                            UnitPrice = 5m,
                            UnitsInStock = 90,
                            Weight = "0.5 kg"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            ProductName = "Mango Delight",
                            UnitPrice = 12m,
                            UnitsInStock = 60,
                            Weight = "1 kg"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 4,
                            ProductName = "Lemon Zest Cookies",
                            UnitPrice = 7m,
                            UnitsInStock = 80,
                            Weight = "300 g"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4,
                            ProductName = "Caramel Crunch Popcorn",
                            UnitPrice = 6m,
                            UnitsInStock = 120,
                            Weight = "200 g"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 5,
                            ProductName = "Strawberry Yogurt",
                            UnitPrice = 18m,
                            UnitsInStock = 55,
                            Weight = "1.2 kg"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 5,
                            ProductName = "Blueberry Muffins",
                            UnitPrice = 9m,
                            UnitsInStock = 70,
                            Weight = "400 g"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 6,
                            ProductName = "Spicy Salsa",
                            UnitPrice = 4m,
                            UnitsInStock = 100,
                            Weight = "250 ml"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 6,
                            ProductName = "Garlic Hummus",
                            UnitPrice = 6m,
                            UnitsInStock = 85,
                            Weight = "350 g"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 7,
                            ProductName = "Classic Barbecue Sauce",
                            UnitPrice = 8m,
                            UnitsInStock = 65,
                            Weight = "500 ml"
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 7,
                            ProductName = "Honey Mustard Dressing",
                            UnitPrice = 5m,
                            UnitsInStock = 110,
                            Weight = "300 ml"
                        },
                        new
                        {
                            ProductId = 15,
                            CategoryId = 8,
                            ProductName = "Whole Wheat Pasta",
                            UnitPrice = 7m,
                            UnitsInStock = 75,
                            Weight = "1 kg"
                        },
                        new
                        {
                            ProductId = 16,
                            CategoryId = 8,
                            ProductName = "Quinoa Rice Blend",
                            UnitPrice = 10m,
                            UnitsInStock = 50,
                            Weight = "750 g"
                        },
                        new
                        {
                            ProductId = 17,
                            CategoryId = 9,
                            ProductName = "Assorted Nuts Mix",
                            UnitPrice = 12m,
                            UnitsInStock = 40,
                            Weight = "400 g"
                        },
                        new
                        {
                            ProductId = 18,
                            CategoryId = 9,
                            ProductName = "Dried Cranberries",
                            UnitPrice = 6m,
                            UnitsInStock = 85,
                            Weight = "250 g"
                        },
                        new
                        {
                            ProductId = 19,
                            CategoryId = 10,
                            ProductName = "Herbal Chamomile Tea",
                            UnitPrice = 5m,
                            UnitsInStock = 120,
                            Weight = "100 g"
                        },
                        new
                        {
                            ProductId = 20,
                            CategoryId = 10,
                            ProductName = "Peppermint Infusion",
                            UnitPrice = 8m,
                            UnitsInStock = 60,
                            Weight = "150 g"
                        },
                        new
                        {
                            ProductId = 21,
                            CategoryId = 11,
                            ProductName = "Organic Tomato Soup",
                            UnitPrice = 4m,
                            UnitsInStock = 95,
                            Weight = "750 ml"
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.HasOne("BusinessObject.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.HasOne("BusinessObject.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.HasOne("BusinessObject.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
